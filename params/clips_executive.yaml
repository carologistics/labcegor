clips_manager:
  ros__parameters:
    # logs clips activities in a file at the location of ros logs.
    log_clips_to_file: true
    # CLIPS events to log.
    watch: [rules, facts]

clips_executive:
  ros__parameters:
    # If CLIPS debugging is enabled, certain rules and facts can be excluded
    # from watching, e.g. if they are showing up at too high frequencies or
    # are not of interest.
    unwatch_facts: ["time"]
    unwatch_rules: ["time-retract"]

    # If set to true, will trigger the assertion of a (time (now)) fact in
    # each loop. This can be used to trigger loop events in CLIPS.
    assert_time_each_loop: true

    # Sets the frequency, in which the clips agenda is being refresh
    # inside the CX (in HZ)
    refresh_rate: 1

    # If set to true, goals will be cleaned automatically when they
    # reach the RETRACTED state. Disabling be useful for debugging.
    # You need to manually cleanup goals (and associated data such as
    # plans) to keep things tidy.
    automatic-goal-retraction: true
    init:
      # Files are relative pathes to the share directory of the cx_clips_executive
      # and the path specified through agent_dir
      # These files are loaded from the cx_clips_executive package
      - name: clips-executive
        files:
          - core/plan.clp
          - core/goal.clp
          - core/domain.clp
          - core/skills.clp
          - core/skills-actions.clp
          - core/worldmodel.clp
          - core/wm-domain-sync.clp
      - name: domain
        # file: labcegor-agent/domain.clp
        file: labcegor-agent/simple_moving_domain.clp
      - name: refbox-comm
        file: labcegor-agent/refbox-comm-init.clp
      - name: refbox-recv
        file: labcegor-agent/refbox-recv-messages.clp
      - name: refbox-send
        file: labcegor-agent/refbox-send-messages.clp
      - name: order-expansion
        file: labcegor-agent/order-expansion.clp
      - name: subgoal-creation
        files:
          - labcegor-agent/subgoal-creation_misc.clp 
          - labcegor-agent/subgoal-creation_payment.clp
          - labcegor-agent/subgoal-creation_c3.clp
          - labcegor-agent/subgoal-creation_c2.clp
          - labcegor-agent/subgoal-creation_c1.clp
          - labcegor-agent/subgoal-creation_c0.clp
      - name: goal-reasoner
        file: labcegor-agent/goal-reasoner.clp
      - name: fixed-sequence  # FIXME: only used one
        file: labcegor-agent/fixed-sequence_on_new_domain.clp
        # file: labcegor-agent/fixed-sequence.clp
      - name: action-selection
        file: labcegor-agent/action-selection.clp
      - name: action-execution
        files:
          - labcegor-agent/print-action.clp
     # Map plan actions to skill strings.
    action_mapping:
      gowait:
        mapped_to: say{text="hello world"}
        executor: dummy_skiller
      move:
        mapped_to: say{text="hello world!"}
        executor: dummy_skiller
      pick:
        mapped_to: say{text='hello world!'}
        executor: dummy_skiller
      pick_at_slide:
        mapped_to: say{text='hello world!'}
        executor: dummy_skiller
      pick_at_output:
        mapped_to: say{text='hello world!'}
        executor: dummy_skiller
      place:
        mapped_to: say{text='hello world!'}
        executor: dummy_skiller
      place_at_slide:
        mapped_to: say{text='hello world!'}
        executor: dummy_skiller
      # prepare_bs:
      #   mapped_to: say{text='hello world!'}
      #   executor: dummy_skiller
      # prepare_cs:
      #   mapped_to: say{text='hello world!'}
      #   executor: dummy_skiller
      # prepare_rs:
      #   mapped_to: say{text='hello world!'}
      #   executor: dummy_skiller

    parameters:
      simtest:
        enabled: false
        testbed: FULL  # defined in simtest.clp
      rcll:
        peer-address: 172.26.255.255
        peer-recv-port: 4444
        peer-send-port: 4445
        cyan-recv-port: 4441
        magenta-recv-port: 4442
        cyan-send-port: 4446
        magenta-send-port: 4447

        team-name: Carologistics
        crypto-key: randomkey
        cipher: "aes-128-cbc"
